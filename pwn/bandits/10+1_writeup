  __  ___       __                 _ _                   
 /_ |/ _ \   _ /_ |               |_| |                  
  | | | | |_| |_| | __      ___ __|_| |_ ___ _   _ _ __  
  | | | | |_   _| | \ \ /\ / / '__| | __/ _ \ | | | '_ \ 
  | | |_| | |_| | |  \ V  V /| |  | | ||  __/ |_| | |_) |
  |_|\___/      |_|   \_/\_/ |_|  |_|\__\___|\__,_| .__/ 
                                                  | |    
                                                  |_|    
============================================================

Вот и первый CTF райтап на Гитхабе поспел))
(Делаю впервые, если что то поплыло или не отрендерилось, соряньте)
Все думал, на каком языке буду публиковать записи, 
Бог с ним, решил, буду фигачить на русском.
В скором времени может, сподоблюсь делать переводы, но пока что мне лень ахахаха
За терминологию прошу не бить ногами, я отнюдь не гуру линукса))

Сегодня на разборе 11 pwn таксов от https://overthewire.org/wargames/bandit/
Ранее я уже решал первую десятку этих тасков, пользуясь случаем хочу зафискировать их решение.
Буду документировать оставшиеся группами, ибо в основном *Глубокий вздох* они несложные))

=Шаг первый= 
Врубаем в наушники сию имбу: https://www.youtube.com/watch?v=udeEe9POI2g. Без этого ну не то все эти ваши CTF))

=Шаг второй=
Открываем сайтик https://overthewire.org/wargames/bandit/, начинаем решать)) По каждой ступени можно найти
описание уровня, а так же какие команды могут понадобится для решения

0) bandit0

Основополагающий принцип сего варгейма - каждый флаг есть пароль от следующего уровня. Пароль для bandit0 - bandit0))

![ Подключаемся к сервачку с помощью ssh (порт 2220). Нас встречают вот таким рисунком и просьбой ввести пароль ](.images\connection.png)

Я не буду расписывать этап подключения для каждой ступени. Ничего, кроме адреса сервера и вводимого пароля там не меняется))

![ Флаг лежит в домашней дериктории, осматриваемся, находим файл, выводим в терминал содержиоме файлика ](.images\sol0.png)

1) bandit1

![ Решение похоже на предыдущий шаг, единственное, что нужно сделать, вот таким образом задать команду (чтобы тире было воспринято как имя файла, а не флажок параметра) ](.images\sol1.png)

2) bandit2

![ Похожая проблема, решается проставлением кавычек, чтобы пробелы не мешали восприятию команды ](.images\sol2.png)

3) bandit3

![ Если попытаться вывести содержимое файлов, ничего не выйдет, однако с параметром -a у нас появиласб возмонжость видеть скрытые файлы)) А вон и флажок ](.images\sol3.png)

4) bandit4

![ Подключаемся, осматриваемся, видим вот такую картину: ](.images\sol4.png)

По условию, лишь один файл читабелен для человека, поэтому сначала с помощью команды file ./* смотрим, какому типу принадлежат файлы в этой директории,
затем выводим в консольку тот, который подходит. Я один в первый раз в тупую пересматривал содержимое всех файлов?))

5) bandit5

![ Ситуация изменилась, теперь у нас куча директорий, набитых нечитаемыми файлами, лишь один из них подходит по формату и размеру ](.images\sol5[1].png)

![ Решил следующей командой ](.images\sol5[2].png)

6) bandit6

![ ЭТО КАКОЙ ТО УЖАС... Единственное, что не ясно, это работа с группами, но этого уже хватило, чтобы расплавить мне мозг ](.images\sol6.png)

Походу реально самый хардовый таск из всех. Решается только так. Разумеется, до такой дичи самостоятельно не додумался))

7) bandit7 

![ Халявка. После предыдущего то)). Дан ОГРОМНЫЙ файл вот такой структуры ](.images\sol7[1].png)

![ По указанной подстроке ищем флаг, и мы в ажуре)) ](.images\sol7[2].png)

8) bandit8

![ Тут уже другой кейс. Из всех строк подходит одна, уникальная ](.images\sol8[1].png)

![ Найти её можно так ](.images/sol8[2].png)

9) bandit9

![ Разрабы хотели, чтобы я с помощью команд отыскал в этом файле нужную подстроку ](.images\sol9.png)

![ Но я не стал заморачиваться, и нашел её визуально АХАХХАХАХАХ ](.images\sol9[lol].png)

10) bandit10

![ Закодироовать можно не только человека, но и строку. Декодируем)) ](.images\sol10.png)

11) bandit11

![ Изначально не хотел решать сей таск, но тут мой любимый цезарь ](.images\sol11.png)

Сказал бы я, что стянул свой скрипт по расшифровке, но я снова обленился, и воспользовался онлайн инструментом))
Получился последний на сегодня флажок - 7x16WNeHIi5YkIhWsfFIqoognUTyj9Q4

![ По итогам, в моей виртуалке обосновался вот такой вот файлик)) ](.images\results.png)
Как то так))
